---
import Layout from "../layouts/Layout.astro";
import "../styles/global.css";
import "../styles/bat.scss";
import "../styles/t-rex.css";
---

<Layout>
  <div class="bat"></div>
  <canvas id="starfield"></canvas>
</Layout>

<script>
  const canvas = document.getElementById(
    "starfield"
  ) as HTMLCanvasElement | null;
  if (!canvas) {
    throw new Error("Canvas element not found");
  }
  const ctx = canvas.getContext("2d");
  if (!ctx) {
    throw new Error("2D context not available");
  }
  let stars: { x: number; y: number; size: number; speed: number }[] = [];
  const numStars = window.innerWidth < 768 ? 100 : 200;
  const maxStarSize = 2;

  function resizeCanvas() {
    if (canvas) {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    }
  }

  window.addEventListener("resize", resizeCanvas);
  resizeCanvas();

  function createStars() {
    if (canvas) {
      stars = [];
      for (let i = 0; i < numStars; i++) {
        stars.push({
          x: Math.random() * canvas.width,
          y: Math.random() * canvas.height,
          size: Math.random() * maxStarSize,
          speed: Math.random() * 0.2 + 0.2,
        });
      }
    }
  }

  function drawStars() {
    if (ctx && canvas) {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.fillStyle = "#fff";
      for (const star of stars) {
        ctx.beginPath();
        ctx.arc(star.x, star.y, star.size, 0, Math.PI * 2);
        ctx.fill();
        star.y += star.speed;
        if (star.y > canvas.height) {
          star.y = 0;
          star.x = Math.random() * canvas.width;
        }
      }
      requestAnimationFrame(drawStars);
    }
  }

  createStars();
  drawStars();
</script>
